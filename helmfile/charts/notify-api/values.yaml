# Default values for notify.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

# COMMON and DEFAULT Variables
api:
  env: default
  document_download_api_host: http://document-download-api.{{ .Values.api.env }}.svc.cluster.local:7000
  base_domain: notification.canada.ca
  hc_en_service_id: changeme
  hc_fr_service_id: changeme
  asset_upload_bucket_name: notification-canada-ca-{{ .Values.api.env }}-asset-upload
  allow_debug_route: "true"
  asset_domain: assets.{{ .Values.api.env }}.notification.cdssandbox.xyz
  crm_org_list_url: https://raw.githubusercontent.com/cds-snc/gc-organisations-qa/main/data/all.json
  csv_upload_bucket_name: notification-canada-ca-{{ .Values.api.env }}-csv-upload
  documentation_domain: 'documentation.{{ .Values.api.env }}.notification.cdssandbox.xyz'
  ff_salesforce_contact: "false"
  flask_app: application.py
  notification_queue_prefix: eks-notification-canada-ca
  redis_enabled: "0"
  salesforce_domain: changeme
  new_relic_monitor_mode: "false"
  api_host_name: https://api.{{ .Values.api.env }}.notification.cdssandbox.xyz
  batch_insertion_chunk_size: "10"
  sql_alchemy_pool_size: "256"
  new_relic_app_name: "notify-api-{{ .Values.api.env }}"
  new_relic_distributed_tracing_enabled: "false"
  aws_ses_region: us-east-1
  aws_ses_smtp: email-smtp.us-east-1.amazonaws.com
  aws_us_toll_free_number: +18005555555
  zendesk_sell_api_url: https://cds-snc.zendesk.com
  zendesk_api_url: https://api.getbase.com
  allow_html_service_ids: 1,2,3
  aws_pinpoint_region: us-west-2
  aws_region: ca-central-1
  fresh_desk_api_url: https://cds-snc.freshdesk.com
  sentry_url: changeme


image:
  repository: public.ecr.aws/cds-snc/notify-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

priorityClassName: high-priority

readinessProbe:
  httpGet:
    path: /_status?simple=true
    port: 6012

livenessProbe:
  httpGet:
    path: "/_status?simple=true"
    port: 6012

serviceAccount:
  create: true
  serviceAccountName: "notify-api"

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: LoadBalancer
  port: 6012
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: "250m"
    memory: "700Mi"
  limits:
    cpu: "1200m"
    memory: "900Mi"

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 50

pdb:
  enabled: true
  minAvailable: 1

nodeSelector:
  eks.amazonaws.com/capacityType: ON_DEMAND

targetGroupBinding:
  enabled: false
  targetGroupARN: ""

tolerations: []

affinity: {}

secretProviderClass:
  enabled: true
  provider: aws
  parameters:
    objects: |
      - objectName: INTERNAL_DNS_KEY_BASE64
        objectType: "secretsmanager"
      - objectName: INTERNAL_DNS_CERT_BASE64
        objectType: "secretsmanager"

  secretObjects:
    - data:
        - key: tls.key
          objectName: INTERNAL_DNS_KEY_BASE64
        - key: tls.crt
          objectName: INTERNAL_DNS_CERT_BASE64
      secretName: nginx
      type: kubernetes.io/tls
