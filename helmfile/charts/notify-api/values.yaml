# Default values for notify.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

api:
  env: dev
  base_domain: notification.canada.ca
  document_download_api_host: "http://document-download-api.main.svc.cluster.local:7000"
  hc_en_service_id: c2fe9fac-2f28-40ca-b152-08ee41cd6843
  hc_fr_service_id: changeme
  asset_upload_bucket_name: notification-canada-ca-{{.Values.api.env}}-asset-upload
  allow_debug_route: "false"
  asset_domain: https:/assets.notification.canada.ca
  crm_org_list_url: https://raw.githubusercontent.com/cds-snc/gc-organisations/main/data/all.json
  csv_upload_bucket_name: notification-canada-ca-{{.Values.api.env}}-csv-upload
  documentation_domain: 'documentation.{{ .Values.api.baseDomain }}'
  ff_salesforce_contact: "true"
  flask_app: application.py
  notification_queue_prefix: eks-notification-canada-ca
  redis_enabled: "1"
  salesforce_domain: login
  new_relic_monitor_mode: "true"
  api_host_name: https://api.{{ .Values.api.env }}.{{ .Values.api.baseDomain }}
  batch_insertion_chunk_size: "10"
  sql_alchemy_pool_size: "256"
  new_relic_app_name: "notify-api-{{ .Values.api.env }}"
  new_relic_distributed_tracing_enabled: "true"



image:
  repository: public.ecr.aws/cds-snc/notify-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%  

priorityClassName: high-priority

readinessProbe:
  httpGet:
    path: /_status?simple=true
    port: 6012

livenessProbe:
  httpGet:
    path: "/_status?simple=true"
    port: 6012


serviceAccount:
  create: true
  serviceAccountName: "notify-api"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: LoadBalancer
  port: 6012
  annotations: 
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  requests:
    cpu: "250m"
    memory: "700Mi"
  limits:
    cpu: "1200m"
    memory: "900Mi"

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 50

pdb:
  enabled: true
  minAvailable: 1

nodeSelector:  
  eks.amazonaws.com/capacityType: ON_DEMAND

targetGroupBinding:
  enabled: false
  targetGroupARN: ""

tolerations: []

affinity: {}

secretProviderClass:
  enabled: true
  provider: aws
  parameters:
    objects: |
      - objectName: INTERNAL_DNS_KEY_BASE64
        objectType: "secretsmanager"
      - objectName: INTERNAL_DNS_CERT_BASE64
        objectType: "secretsmanager"

  secretObjects:
    - data:
      - key: tls.key
        objectName: INTERNAL_DNS_KEY_BASE64
      - key: tls.crt
        objectName: INTERNAL_DNS_CERT_BASE64
      secretName: nginx
      type: kubernetes.io/tls