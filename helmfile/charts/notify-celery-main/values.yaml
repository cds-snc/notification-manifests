# Default values for celery.
celeryCommon:
  adminBaseUrl: "https://admin.notify.tools"
  allowHtmlServiceIds: "lskdjf"
  apiHostName: "api.notify.tools"
  assetUploadBucketName: "asset-upload-notify"
  awsPinpointRegion: "us-east-1"
  awsRegion: "us-east-1"
  bulkSendTestServiceId: "lskdjf"
  csvUploadBucketName: "csv-upload-notify"
  documentDownloadApiHost: "https://document-download.notify.tools"
  fido2Domain: "https://fido2.notify.tools"
  hcEnServiceId: "lskdjf"
  hcFrServiceId: "lskdjf"
  notifyEmailDomain: "notify.tools"
  notifyEnvironment: "development"
  notificationQueuePrefix: "development"
  redisEnabled: "True"
  sqlalchemyDatabaseUri: "postgresql://notify:notify@notify-postgres:5432/notify"
  sqlalchemyDatabaseReaderUri: "postgresql://notify:notify@notify-postgres:5432/notify"
  awsUsTollFreeNumber: "1234567890"
  sentryUrl: "https://sentry.notify.tools"
  newRelicDistributedTracingEnabled: "True"
  newRelicMonitorMode: "False"
  awsXrayContextMissing: "LOG_ERROR"
  awsXrayDaemonAddress: "xray-daemon:2000"
  awsXraySdkEnabled: "True"
  newRelicMonitorMode: "False"
  assetDomain: "https://assets.notify.tools"
  batchInsertionChunkSize: "1000"
  celeryConcurrency: "10"
  ffCloudwatchMetricsEnabled: "True"
  ffAnnualLimit: "1000000"

celeryMain:
  newRelicAppName: "notification-celery-$(ENVIRONMENT)"

celeryMainBeat:
  newRelicAppName: "notification-celery-beat-$(ENVIRONMENT)"

celeryMainSms:
  newRelicAppName: "notification-celery-sms-$(ENVIRONMENT)"

image:
  repository: public.ecr.aws/cds-snc/notify-api
  pullPolicy: Always
  tag: "latest"

replicaCount: 2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

priorityClassName: high-priority

serviceAccount:
  create: true
  serviceAccountName: "notify-celery-main"

podAnnotations: {}

podSecurityContext: {}

resources:
  requests:
    cpu: "100m"
    memory: "500Mi"
  limits:
    cpu: "550m"
    memory: "1024Mi"

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 50

pdb:
  enabled: true
  minAvailable: 1

nodeSelector:
  eks.amazonaws.com/capacityType: ON_DEMAND

tolerations: []

affinity: {}

dnsPolicy: ClusterFirst
restartPolicy: Always
schedulerName: default-scheduler
terminationGracePeriodSeconds: 60

secretProviderClass:
  enabled: true
  provider: aws
  parameters:
    objects: |
      - objectName: INTERNAL_DNS_KEY_BASE64
        objectType: "secretsmanager"
      - objectName: INTERNAL_DNS_CERT_BASE64
        objectType: "secretsmanager"

  secretObjects:
    - data:
        - key: tls.key
          objectName: INTERNAL_DNS_KEY_BASE64
        - key: tls.crt
          objectName: INTERNAL_DNS_CERT_BASE64
      secretName: nginx
      type: kubernetes.io/tls
