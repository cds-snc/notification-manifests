apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "notify.fullname" . }}
  labels:
    {{- include "notify.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  priorityClassName: {{ .Values.priorityClassName }}
  strategy:
    {{ toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "notify.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "notify.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "notify.serviceAccountName" . }}
      dnsPolciy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-postgres
          image: alpine
          command:
            [
              "sh",
              "-c",
              "until nc -z -w 2 {{ .Values.apiUrl }} 443; do echo waiting for api; sleep 2; done"
            ]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ADMIN_BASE_URL
              value: "{{ .Values.adminBaseUrl }}"
            - name: ADMIN_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: notify-admin
                  key: ADMIN_CLIENT_SECRET
            - name: MIXPANEL_PROJECT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: notify-admin
                  key: MIXPANEL_PROJECT_TOKEN
            - name: ALLOW_DEBUG_ROUTE
              value: "{{ .Values.allowDebugRoute }}"
            - name: ALLOW_HTML_SERVICE_IDS
              value: "{{ .Values.allowHtmlServiceIds}}"
            - name: API_HOST_NAME
              value: "{{ .Values.apiUrl }}"
            - name: ASSET_UPLOAD_BUCKET_NAME
              value: "{{ .Values.assetUploadBucketName }}"
            - name: AWS_REGION
              value: "{{ .Values.awsRegion }}"
            - name: BULK_SEND_AWS_BUCKET
              value: "{{ .Values.bulkSendAwsBucket }}"
            - name: BULK_SEND_TEST_SERVICE_ID
              value: "{{ .Values.bulkSendTestServiceId }}"
            - name: CONTACT_EMAIL
              value: "{{ .Values.contactEmail }}"
            - name: CSV_UPLOAD_BUCKET_NAME
              value: "{{ .Values.csvUploadBucketName }}"
            - name: DANGEROUS_SALT
              valueFrom:
                secretKeyRef:
                  name: notify-admin
                  key: DANGEROUS_SALT
            - name: DOCUMENTATION_DOMAIN
              value: "{{ .Values.documentationDomain }}"
            - name: HC_EN_SERVICE_ID
              value: "{{ .Values.hcEnServiceId }}"
            - name: HC_FR_SERVICE_ID
              value: "{{ .Values.hcFrServiceId }}"
            - name: FLASK_APP
              value: "{{ .Values.flaskApp }}"
            - name: NOTIFY_ENVIRONMENT
              value: "{{ .Values.env}}"
            - name: SENDING_DOMAIN
              value: "{{ .Values.baseDomain }}"
            - name: SQLALCHEMY_DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: notify-admin
                  key: SQLALCHEMY_DATABASE_URI
            - name: STATSD_HOST
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: REDIS_URL
              valueFrom:
                  secretKeyRef:
                    name: notify-admin
                    key: REDIS_URL
            - name: REDIS_PUBLISH_URL
              valueFrom:
                  secretKeyRef:
                    name: notify-admin
                    key: REDIS_PUBLISH_URL
            - name: REDIS_ENABLED
              value: "{{ .Values.redisEnabled }}"
            - name: SECRET_KEY
              valueFrom:
                  secretKeyRef:
                    name: notify-admin
                    key: SECRET_KEY
            - name: SENTRY_URL
              value: "{{ .Values.sentryUrl }}"
            - name: SHOW_STYLEGUIDE
              value: "{{ .Values.showStyleguide }}"
            - name: NEW_RELIC_APP_NAME
              value: "{{ .Values.newRelicAppName }}"
            - name: NEW_RELIC_CONFIG_FILE
              value: "{{ .Values.newRelicConfigFile }}"
            - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
              value: "{{ .Values.newRelicDistributedTracingEnabled }}"
            - name: NEW_RELIC_LICENSE_KEY
              valueFrom:
                  secretKeyRef:
                    name: notify-admin
                    key: NEW_RELIC_LICENSE_KEY
            - name: NEW_RELIC_MONITOR_MODE
              value: "{{ .Values.newRelicMonitorMode }}"
            - name: IP_GEOLOCATE_SERVICE
              value: "{{ .Values.ipGeolocateService }}"
            - name: GC_ARTICLES_API
              value: "{{ .Values.gcArticlesApi }}"
            - name: GC_ARTICLES_API_AUTH_USERNAME
              valueFrom:
                  secretKeyRef:
                    name: notify-admin
                    key: GC_ARTICLES_API_AUTH_USERNAME
            - name: GC_ARTICLES_API_AUTH_PASSWORD
              valueFrom:
                  secretKeyRef:
                    name: notify-admin
                    key: GC_ARTICLES_API_AUTH_PASSWORD
            - name: WAF_SECRET
              valueFrom:
                  secretKeyRef:
                    name: notify-admin
                    key: WAF_SECRET
            - name: CRM_GITHUB_PERSONAL_ACCESS_TOKEN
              valueFrom:
                  secretKeyRef:
                    name: notify-admin
                    key: CRM_GITHUB_PERSONAL_ACCESS_TOKEN
            - name: CRM_ORG_LIST_URL
              value: "{{ .Values.crmOrgListUrl }}"
            - name: FF_SALESFORCE_CONTACT
              value: "{{ .Values.ffSalesforceContact }}"
            - name: AWS_XRAY_TRACING_ENABLED
              value: "{{ .Values.aws_xray_tracing_enabled }}"
            - name: AWS_XRAY_CONTEXT_MISSING
              value: "{{ .Values.aws_xray_context_missing }}"
            {{ if .Values.allowDebugRoute }}
            - name: DEBUG_KEY
              valueFrom:
                 secretKeyRef:
                    name: notify-admin
                    key: DEBUG_KEY
            {{ end }}
          {{ if .Values.secretProviderClass.enabled}}    
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true          
          {{ end }}   
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /_status?simple=true
              port: 6012
            initialDelaySeconds: 10
            periodSeconds: 3
            timeoutSeconds: 1
            successThreshold: 3
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: "/_status?simple=true"
              port: 6012
            initialDelaySeconds: 30
            periodSeconds: 3
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{ if .Values.secretProviderClass.enabled}}    
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "notify.fullname" . }}
      {{ end }}                   
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
