nodes:
  # CELERY BEAT
  other-beat:
    name: beat
    newRelicAppName: "notification-celery-beat-dev"
    scriptArg: "sh /app/scripts/run_celery_beat.sh"
    deployment:
      deploymentBeatEnabled: true
      terminationGracePeriodSeconds: 30
      nodeSelector:
        eks.amazonaws.com/capacityType: ON_DEMAND
      replicas: 3
    pdb:
      pdbEnabled: false
    autoscaling:
      hpaEnabled: false
    service:
      serviceEnabled: true
  # PRIMARY CONFIGS
  # CELERY FOR CORE TASKS
  primary-main:
    name: primary
    newRelicAppName: "notification-celery-main-primary-dev"
    scriptArg: "sh /app/scripts/run_celery_core_tasks.sh"
    deployment:
      deploymentEnabled: true
      terminationGracePeriodSeconds: 60
      resources:
        requests:
          cpu: "100m"
          memory: "800Mi"
        limits:
          cpu: "550m"
          memory: "1024Mi"
      priorityClassName: high-priority
      nodeSelector:
        eks.amazonaws.com/capacityType: ON_DEMAND
      replicas: 3
    pdb:
      pdbEnabled: true
      minAvailable: 2
    autoscaling:
      hpaEnabled: false
    service:
      serviceEnabled: true
  # CELERY FOR SENDING EMAILS
  primary-email:
    name: email-send-primary
    newRelicAppName: "notification-celery-email-send-primary-dev"
    scriptArg: "sh /app/scripts/run_celery_send_email.sh"
    deployment:
      deploymentEnabled: true
      terminationGracePeriodSeconds: 60
      resources:
        requests:
          cpu: "100m"
          memory: "800Mi"
        limits:
          cpu: "550m"
          memory: "1024Mi"
      priorityClassName: high-priority
      nodeSelector:
        eks.amazonaws.com/capacityType: ON_DEMAND
      replicas: 3
    pdb:  
      pdbEnabled: true
      minAvailable: 2
    autoscaling:
      hpaEnabled: false
    service:
      serviceEnabled: true
  # CELERY FOR SENDING NON-DEDICATED LONG CODE SMS
  primary-sms:
    name: sms-send-primary
    newRelicAppName: "notification-celery-sms-send-primary-dev"
    scriptArg: "sh /app/scripts/run_celery_send_sms.sh"
    deployment:
      deploymentEnabled: true
      terminationGracePeriodSeconds: 60
      resources:
        requests:
          cpu: "100m"
          memory: "800Mi"
        limits:
          cpu: "550m"
          memory: "1024Mi"
      priorityClassName: high-priority
      nodeSelector:
        eks.amazonaws.com/capacityType: ON_DEMAND
      replicas: 3
    pdb:
      pdbEnabled: true
      minAvailable: 2
    autoscaling:
      hpaEnabled: false
    service:
      serviceEnabled: true
  # CELERY FOR SENDING SMS OVER DEDICATED LONG CODE
  other-sms:
    name: sms
    newRelicAppName: "notification-celery-sms-dev"
    scriptArg: "sh /app/scripts/run_celery_sms.sh"
    deployment:
      deploymentBeatEnabled: true
      terminationGracePeriodSeconds: 60
      nodeSelector:
        eks.amazonaws.com/capacityType: ON_DEMAND
      replicas: 3
    pdb:
      pdbEnabled: false
    autoscaling:
      hpaEnabled: false
    service:
      serviceEnabled: true      
  # SCALABLE CONFIGS
  # CELERY FOR CORE TASKS
  scalable-main:
    name: scalable
    newRelicAppName: "notification-celery-main-scalable-dev"
    scriptArg: "sh /app/scripts/run_celery_core_tasks.sh"
    deployment:
      deploymentEnabled: true
      priorityClassName: celery
      terminationGracePeriodSeconds: 60
      replicas: 3
      nodeSelector:
        karpenter.sh/capacity-type: spot
      resources:
        requests:
          cpu: "100m"
          memory: "800Mi"
        limits:
          cpu: "550m"
          memory: "1024Mi"
    autoscaling:
      hpaEnabled: true
      minReplicas: 3
      maxReplicas: 30
      targetCPUUtilizationPercentage: 25
      scaleUpPodsValue: 6
      scaleUpPeriodSeconds: 45
    pdb:
      pdbEnabled: true
      minAvailable: 2
    service:
      serviceEnabled: true
  # CELERY FOR DELIVERY RECEIPTS
  scalable-delivery:
    name: delivery-scalable
    newRelicAppName: "notification-celery-delivery-scalable-dev"
    scriptArg: "sh /app/scripts/run_celery_receipts.sh"
    deployment:
      deploymentEnabled: true
      priorityClassName: celery
      terminationGracePeriodSeconds: 60
      replicas: 3
      nodeSelector:
        karpenter.sh/capacity-type: spot
      resources:
        requests:
          cpu: "100m"
          memory: "800Mi"
        limits:
          cpu: "550m"
          memory: "1024Mi"
    autoscaling:
      hpaEnabled: true
      minReplicas: 3
      maxReplicas: 10
      targetCPUUtilizationPercentage: 25
      scaleUpPodsValue: 6
      scaleUpPeriodSeconds: 45
    pdb:
      pdbEnabled: true
      minAvailable: 2
    service:
      serviceEnabled: true
  # CELERY FOR SENDING EMAILS
  scalable-email:
    name: email-send-scalable
    newRelicAppName: "notification-celery-email-send-scalable-dev"
    scriptArg: "sh /app/scripts/run_celery_send_email.sh"
    deployment:
      deploymentEnabled: true
      priorityClassName: celery
      terminationGracePeriodSeconds: 60
      replicas: 3
      nodeSelector:
        karpenter.sh/capacity-type: spot
      resources:
        requests:
          cpu: "100m"
          memory: "800Mi"
        limits:
          cpu: "550m"
          memory: "1024Mi"
    autoscaling:
      hpaEnabled: true
      minReplicas: 3
      maxReplicas: 30
      targetCPUUtilizationPercentage: 25
      scaleUpPodsValue: 6
      scaleUpPeriodSeconds: 45
    pdb:
      pdbEnabled: true
      minAvailable: 2
    service:
      serviceEnabled: true
  # CELERY FOR SENDING NON-DEDICATED LONG CODE SMS
  scalable-sms:
    name: sms-send-scalable
    newRelicAppName: "notification-celery-sms-send-scalable-dev"
    scriptArg: "sh /app/scripts/run_celery_send_sms.sh"
    deployment:
      deploymentEnabled: true
      priorityClassName: celery
      terminationGracePeriodSeconds: 60
      replicas: 3
      nodeSelector:
        karpenter.sh/capacity-type: spot
      resources:
        requests:
          cpu: "100m"
          memory: "800Mi"
        limits:
          cpu: "550m"
          memory: "1024Mi"
    autoscaling:
      hpaEnabled: true
      minReplicas: 3
      maxReplicas: 3
      targetCPUUtilizationPercentage: 25
      scaleUpPodsValue: 6
      scaleUpPeriodSeconds: 45
    pdb:
      pdbEnabled: true
      minAvailable: 2
    service:
      serviceEnabled: true

image:
  repository: public.ecr.aws/cds-snc/notify-api
  pullPolicy: Always
  tag: "latest"

replicaCount: 3

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

serviceAccount:
  create: true
  serviceAccountName: "notify-celery"

service:
  enabled: true
  port: 80
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"

podAnnotations: {}

podSecurityContext: {}

tolerations: []

affinity: {}

dnsPolicy: ClusterFirst
restartPolicy: Always
schedulerName: default-scheduler
terminationGracePeriodSeconds: 60

secretProviderClass:
  secretname: notify-celery
  enabled: true
  provider: aws
  parameters:
    objects: |
      - objectName: INTERNAL_DNS_KEY_BASE64
        objectType: "secretsmanager"
      - objectName: INTERNAL_DNS_CERT_BASE64
        objectType: "secretsmanager"

  secretObjects:
    - data:
        - key: tls.key
          objectName: INTERNAL_DNS_KEY_BASE64
        - key: tls.crt
          objectName: INTERNAL_DNS_CERT_BASE64
      secretName: nginx
      type: kubernetes.io/tls
