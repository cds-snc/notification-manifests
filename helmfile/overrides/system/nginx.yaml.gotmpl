controller:
  image:
    tag: 3.4.2
  service:
    type: ClusterIP
  extraContainers:
    - name: otel-collector
      image: otel/opentelemetry-collector-contrib:0.88.0
      ports:
        - containerPort: 8888  # metrics port
        - containerPort: 8889  # prometheus metrics port
      env:
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=nginx-ingress,service.version=3.4.2,deployment.environment={{ .Environment.Name }}"
      volumeMounts:
        - name: otel-collector-config
          mountPath: /etc/otelcol-contrib
          readOnly: true
      resources:
        limits:
          memory: 128Mi
          cpu: 100m
        requests:
          memory: 64Mi
          cpu: 50m
  wildcardTLS:
    secret: {{.Release.Namespace}}/nginx
  defaultTLS:
    secret: {{.Release.Namespace}}/nginx
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::{{ requiredEnv "AWS_ACCOUNT_ID" }}:role/secrets-csi-role-nginx
  volumes:
    - name: secrets-store-inline
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "nginx"
    - name: otel-collector-config
      configMap:
        name: nginx-otel-collector-config
  volumeMounts:
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"
            readOnly: true          
prometheus:
  create: false
secretProviderClass:
  enabled: true
  provider: aws
  parameters:
    objects: |
      - objectName: INTERNAL_DNS_KEY_BASE64
        objectType: "secretsmanager"
      - objectName: INTERNAL_DNS_CERT_BASE64
        objectType: "secretsmanager"

  secretObjects:
    - data:
      - key: tls.key
        objectName: INTERNAL_DNS_KEY_BASE64
      - key: tls.crt
        objectName: INTERNAL_DNS_CERT_BASE64
      secretName: nginx
      type: kubernetes.io/tls

targetGroupBinding:
  enabled: true
  targetGroupARN: {{ requiredEnv "NGINX_TARGET_GROUP_ARN" }}


