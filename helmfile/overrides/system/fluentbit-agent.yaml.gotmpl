env:
  - name: AWS_REGION
    value: {{ requiredEnv "AWS_REGION" }}
  - name: CLUSTER_NAME
    value:  notification-canada-ca-{{ .Environment.Name }}-eks-cluster
  - name: HTTP_SERVER
    value: "On"
  - name: HTTP_PORT
    value: "2020"
  - name: READ_FROM_HEAD
    value: "Off"
  - name: READ_FROM_TAIL
    value: "On"
  - name: HOST_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: HOSTNAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: metadata.name
  - name: CI_VERSION
    value: "k8s/1.3.15"

rbac:
  create: true
  nodeAccess: true
  eventsAccess: true

hostNetwork: true
dnsPolicy: ClusterFirstWithHostNet

resources:
  limits:
    memory: 500Mi
  requests:
    cpu: 100m
    memory: 100Mi

imagePullSecrets: 
  - name: image-pull-secret

tolerations:
  - key: "node-role.kubernetes.io/master"
    operator: "Exists"
    effect: "NoSchedule"
  - key: "node.kubernetes.io/unreachable"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 300
  - key: "node.kubernetes.io/not-ready"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 300
  - key: "nidhogg.uswitch.com/amazon-cloudwatch.fb-agent-fluent-bit"
    operator: "Exists"
    effect: "NoSchedule"    
  - key: "nidhogg.uswitch.com/amazon-cloudwatch.aws-cloudwatch-agent"
    operator: "Exists"
    effect: "NoSchedule"        
  - key: "nidhogg.uswitch.com/amazon-cloudwatch.ebs-csi-node"
    operator: "Exists"
    effect: "NoSchedule"    
  - key: "nidhogg.uswitch.com/amazon-cloudwatch.secrets-store-csi-driver"
    operator: "Exists"
    effect: "NoSchedule"        


terminationGracePeriodSeconds: 10

priorityClassName: "system-cluster-critical"

## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/classic-mode/configuration-file
config:
  service: |
    [SERVICE]
        Flush                     5
        Grace                     30
        Log_Level                 info
        Daemon                    off
        Parsers_File              /fluent-bit/etc/conf/parsers.conf
        HTTP_Server               ${HTTP_SERVER}
        HTTP_Listen               0.0.0.0
        HTTP_Port                 ${HTTP_PORT}
        storage.path              /var/fluent-bit/state/flb-storage/
        storage.sync              normal
        storage.checksum          off
        storage.backlog.mem_limit 5M

    @INCLUDE celery-log.conf
    @INCLUDE notify-log.conf
    @INCLUDE dataplane-log.conf
    @INCLUDE host-log.conf


  inputs: |
    [INPUT]
        Name                tail
        Tag                 application.*
        Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/notify-celery*
        Path                /var/log/containers/*.log
        multiline.parser    docker, cri
        DB                  /var/fluent-bit/state/flb_container.db
        Mem_Buf_Limit       50MB
        Skip_Long_Lines     Off
        Refresh_Interval    10
        Rotate_Wait         30
        storage.type        filesystem
        Read_from_Head      ${READ_FROM_HEAD}

  filters: |
    [FILTER]
        Name                kubernetes
        Match               application.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_Tag_Prefix     application.var.log.containers.
        Merge_Log           On
        Merge_Log_Key       log_processed
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off
        Labels              On
        Annotations         On
        Use_Kubelet         On
        Kubelet_Port        10250
        Buffer_Size         0

  outputs: |
    [OUTPUT]
        Name cloudwatch_logs
        Match application.*
        region ${AWS_REGION}
        log_stream_prefix fallback-stream
        log_group_name /aws/containerinsights/${CLUSTER_NAME}/application
        log_stream_template $kubernetes['container_name']
        auto_create_group on

  extraFiles:
    notify-log.conf: |
      # No [INPUT] sections here! Only filters if needed.
      # REMOVE all [INPUT] sections from this file to avoid duplicate collection.
      [FILTER]
          Name                kubernetes
          Match               application.*
          Kube_URL            https://kubernetes.default.svc:443
          Kube_Tag_Prefix     application.var.log.containers.
          Merge_Log           On
          Merge_Log_Key       log_processed
          K8S-Logging.Parser  On
          K8S-Logging.Exclude Off
          Labels              On
          Annotations         On
          Use_Kubelet         On
          Kubelet_Port        10250
          Buffer_Size         0

    celery-log.conf: |
      [INPUT]
          Name                tail
          Tag                 notify-celery.*
          multiline.parser    multiline-notify-python
          Path                /var/log/containers/notify-celery*
          DB                  /var/fluent-bit/state/celery.db
          Mem_Buf_Limit       150MB
          Skip_Long_Lines     Off
          Refresh_Interval    10
          Rotate_Wait         30
          storage.type        filesystem
          Read_from_Head      ${READ_FROM_HEAD}

      [FILTER]
          Name                  kubernetes
          Match                 notify-celery.*
          Kube_URL              https://kubernetes.default.svc:443
          Kube_Tag_Prefix       celery.var.log.containers.
          Merge_Log             On
          Merge_Log_Key         log_processed
          K8S-Logging.Parser    On
          K8S-Logging.Exclude   Off
          Labels                On
          Annotations           On
          Use_Kubelet           On
          Kubelet_Port          10250
          Buffer_Size           0

      [OUTPUT]
          Name cloudwatch_logs
          Match notify-celery.*
          region ${AWS_REGION} 
          log_stream_prefix fallback-stream
          log_group_name /aws/containerinsights/${CLUSTER_NAME}/application
          log_stream_template $kubernetes['container_name']
          auto_create_group on


    dataplane-log.conf: |
      [INPUT]
          Name                systemd
          Tag                 dataplane.systemd.*
          Systemd_Filter      _SYSTEMD_UNIT=docker.service
          Systemd_Filter      _SYSTEMD_UNIT=containerd.service
          Systemd_Filter      _SYSTEMD_UNIT=kubelet.service
          DB                  /var/fluent-bit/state/systemd.db
          Path                /var/log/journal
          Read_From_Tail      ${READ_FROM_TAIL}

      [INPUT]
          Name                tail
          Tag                 dataplane.tail.*
          Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*
          multiline.parser    docker, cri
          DB                  /var/fluent-bit/state/flb_dataplane_tail.db
          Mem_Buf_Limit       50MB
          Skip_Long_Lines     On
          Refresh_Interval    10
          Rotate_Wait         30
          storage.type        filesystem
          Read_from_Head      ${READ_FROM_HEAD}

      [FILTER]
          Name                modify
          Match               dataplane.systemd.*
          Rename              _HOSTNAME                   hostname
          Rename              _SYSTEMD_UNIT               systemd_unit
          Rename              MESSAGE                     message
          Remove_regex        ^((?!hostname|systemd_unit|message).)*$

      [FILTER]
          Name                aws
          Match               dataplane.*
          imds_version        v2

      [OUTPUT]
          Name                cloudwatch_logs
          Match               dataplane.*
          region              ${AWS_REGION}
          log_group_name      /aws/containerinsights/${CLUSTER_NAME}/dataplane
          log_stream_prefix   ${HOST_NAME}-
          auto_create_group   true
          extra_user_agent    container-insights

    host-log.conf: |
      [INPUT]
          Name                tail
          Tag                 host.dmesg
          Path                /var/log/dmesg
          Key                 message
          DB                  /var/fluent-bit/state/flb_dmesg.db
          Mem_Buf_Limit       5MB
          Skip_Long_Lines     On
          Refresh_Interval    10
          Read_from_Head      ${READ_FROM_HEAD}

      [INPUT]
          Name                tail
          Tag                 host.messages
          Path                /var/log/messages
          Parser              syslog
          DB                  /var/fluent-bit/state/flb_messages.db
          Mem_Buf_Limit       5MB
          Skip_Long_Lines     On
          Refresh_Interval    10
          Read_from_Head      ${READ_FROM_HEAD}

      [INPUT]
          Name                tail
          Tag                 host.secure
          Path                /var/log/secure
          Parser              syslog
          DB                  /var/fluent-bit/state/flb_secure.db
          Mem_Buf_Limit       5MB
          Skip_Long_Lines     On
          Refresh_Interval    10
          Read_from_Head      ${READ_FROM_HEAD}

      [FILTER]
          Name                aws
          Match               host.*
          imds_version        v2

      [OUTPUT]
          Name                        cloudwatch_logs
          Match                       host.*
          region                      ${AWS_REGION}
          log_group_name              /aws/containerinsights/${CLUSTER_NAME}/host
          log_stream_prefix           ${HOST_NAME}.
          auto_create_group           true
          extra_user_agent            container-insights

    parsers.conf: |
      [PARSER]
          Name                syslog
          Format              regex
          Regex               ^(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
          Time_Key            time
          Time_Format         %b %d %H:%M:%S

      [PARSER]
          Name                container_firstline
          Format              regex
          Regex               (?<log>(?<="log":")\S(?!\.).*?)(?<!\\)".*(?<stream>(?<="stream":").*?)".*(?<time>\d{4}-\d{1,2}-\d{1,2}T\d{2}:\d{2}:\d{2}\.\w*).*(?=})
          Time_Key            time
          Time_Format         %Y-%m-%dT%H:%M:%S.%LZ

      [PARSER]
          Name                cwagent_firstline
          Format              regex
          Regex               (?<log>(?<="log":")\d{4}[\/-]\d{1,2}[\/-]\d{1,2}[ T]\d{2}:\d{2}:\d{2}(?!\.).*?)(?<!\\)".*(?<stream>(?<="stream":").*?)".*(?<time>\d{4}-\d{1,2}-\d{1,2}T\d{2}:\d{2}:\d{2}\.\w*).*(?=})
          Time_Key            time
          Time_Format         %Y-%m-%dT%H:%M:%S.%LZ

      [MULTILINE_PARSER]
          name          multiline-notify-python
          type          regex
          flush_timeout 1000
          # rules |   state name  | regex pattern         | next state
          # ------|---------------|-----------------------------------
          rule      "start_state"   "/^\d{2,4}-\d{1,2}-\d{1,2}T\d{1,2}:\d{1,2}:\d{1,2}.\d{1,9}Z\s(stderr|stdout)\sF\s\[.*/"          "cont"
          rule      "cont"          "/^\d{2,4}-\d{1,2}-\d{1,2}T\d{1,2}:\d{1,2}:\d{1,2}.\d{1,9}Z\s(stderr|stdout)\sF\s(?![\[]).*/"           "cont"

# The config volume is mounted by default, either to the existingConfigMap value, or the default of "fluent-bit.fullname"
volumeMounts:
  - name: config
    mountPath: /fluent-bit/etc/conf
  # Please don't change below read-only permissions
  - name: fluentbitstate
    mountPath: /var/fluent-bit/state
  - name: varlog
    mountPath: /var/log
    readOnly: true
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: fluent-bit-config
    mountPath: /fluent-bit/etc/
  - name: runlogjournal
    mountPath: /run/log/journal
    readOnly: true
  - name: dmesg
    mountPath: /var/log/dmesg
    readOnly: true

# This supports either a structured array or a templatable string
initContainers:
  - name: wait-for-init
    image: busybox:1.28
    command: ['sh', '-c', 'echo "Waiting for 10 seconds for node to sort itself out" && sleep 10']
  - name: fluentbitstate
    mountPath: /var/fluent-bit/state
  - name: varlog
    mountPath: /var/log
    readOnly: true
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: fluent-bit-config
    mountPath: /fluent-bit/etc/
  - name: runlogjournal
    mountPath: /run/log/journal
    readOnly: true
  - name: dmesg
    mountPath: /var/log/dmesg
    readOnly: true

# This supports either a structured array or a templatable string
initContainers:
  - name: wait-for-init
    image: busybox:1.28
    command: ['sh', '-c', 'echo "Waiting for 10 seconds for node to sort itself out" && sleep 10']
  - name: runlogjournal
    mountPath: /run/log/journal
    readOnly: true
  - name: dmesg
    mountPath: /var/log/dmesg
    readOnly: true

# This supports either a structured array or a templatable string
initContainers:
  - name: wait-for-init
    image: busybox:1.28
    command: ['sh', '-c', 'echo "Waiting for 10 seconds for node to sort itself out" && sleep 10']
  - name: fluentbitstate
    mountPath: /var/fluent-bit/state
  - name: varlog
    mountPath: /var/log
    readOnly: true
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: fluent-bit-config
    mountPath: /fluent-bit/etc/
  - name: runlogjournal
    mountPath: /run/log/journal
    readOnly: true
  - name: dmesg
    mountPath: /var/log/dmesg
    readOnly: true

# This supports either a structured array or a templatable string
initContainers:
  - name: wait-for-init
    image: busybox:1.28
    command: ['sh', '-c', 'echo "Waiting for 10 seconds for node to sort itself out" && sleep 10']
