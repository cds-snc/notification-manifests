# Default values for amazon-cloudwatch-observability.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
## Provide a name in place of cloudwatchagent-operator.
##
nameOverride: ""
## Provide the ClusterName (this is a required parameter)
clusterName: notification-canada-ca-{{ .Environment.Name }}-eks-cluster
## Provide the Region (this is a required parameter)
region: {{ requiredEnv "AWS_REGION" }}

containerLogs:
  enabled: true

manager:
  name:
  image:
    repository: cloudwatch-agent-operator
    tag: 2.1.0
    repositoryDomainMap:
      public: public.ecr.aws/cloudwatch-agent
      cn-north-1: 934860584483.dkr.ecr.cn-north-1.amazonaws.com.cn
      cn-northwest-1: 934860584483.dkr.ecr.cn-northwest-1.amazonaws.com.cn
      us-gov-east-1: 743662458514.dkr.ecr.us-gov-east-1.amazonaws.com
      us-gov-west-1: 743662458514.dkr.ecr.us-gov-west-1.amazonaws.com
  autoInstrumentationImage:
    java:
      repositoryDomain: public.ecr.aws/aws-observability
      repository: adot-autoinstrumentation-java
      tag: v1.33.0
    python:
      repositoryDomain: public.ecr.aws/aws-observability
      repository: adot-autoinstrumentation-python
      tag: v0.8.0
    dotnet:
      repositoryDomain: public.ecr.aws/aws-observability
      repository: adot-autoinstrumentation-dotnet
      tag: v1.6.0
    nodejs:
      repositoryDomain: public.ecr.aws/aws-observability
      repository: adot-autoinstrumentation-node
      tag: v0.5.0
  autoInstrumentationConfiguration:
    java:
      runtime_metrics:
        enabled: "true"
    python:
      runtime_metrics:
        enabled: "true"
    dotnet:
      runtime_metrics:
        enabled: "true"
  autoInstrumentationResources:
    java:
      limits:
        cpu: 500m
        memory: 64Mi
      requests:
        cpu: 50m
        memory: 64Mi
    python:
      limits:
        cpu: 500m
        memory: 32Mi
      requests:
        cpu: 50m
        memory: 32Mi
    dotnet:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 128Mi
    nodejs:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 128Mi
  autoAnnotateAutoInstrumentation:
    java:
      namespaces: []
      deployments: []
      daemonsets: []
      statefulsets: []
    python:
      namespaces: []
      deployments: []
      daemonsets: []
      statefulsets: []
    dotnet:
      namespaces: []
      deployments: []
      daemonsets: []
      statefulsets: []
    nodejs:
      namespaces: []
      deployments: []
      daemonsets: []
      statefulsets: []
  ports:
    containerPort: 9443
    metricsPort: 8080
    webhookPort: 9443
    healthzPort: 8081
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
  ## Adds additional environment variables
  ## e.g ENV_VAR: env_value
  env:
    ENABLE_WEBHOOKS: "true"
  # -- Create the manager ServiceAccount
  serviceAccount:
    create: true
    annotations: {}
  podAnnotations: {}
  podLabels: {}
  service:
    name:
## Admission webhooks make sure only requests with correctly formatted rules will get into the Operator.
admissionWebhooks:
  certManager:
    enabled: true
    ## Provide the issuer kind and name to do the cert auth job.
    ## By default, OpenTelemetry Operator will use self-signer issuer.
    issuerRef: {}
    # kind:
    # name:
    ## Annotations for the cert and issuer if cert-manager is enabled.
    certificateAnnotations: {}
    issuerAnnotations: {}
  ## Secret annotations
  secretAnnotations: {}
  ## Secret labels
  secretLabels: {}
## List of AmazonCloudWatchAgent workloads to install & manage, each representing an independent installation of the AmazonCloudWatchAgent CustomResource. Each entry in this list uses the schema & the defaults from $.agent, so only provide any overrides here.
agents:
  - name: cloudwatch-agent
agent:
  name:
  mode: daemonset # Represents the mode the AmazonCloudWatchAgent workload will run in (deployment, daemonset or statefulset)
  replicas: 1 # The total number non-terminated pods targeted by this AmazonCloudWatchAgent's deployment or statefulSet.
  image:
    repository: cloudwatch-agent
    tag: 1.300052.0b1024
    repositoryDomainMap:
      public: public.ecr.aws/cloudwatch-agent
      cn-north-1: 934860584483.dkr.ecr.cn-north-1.amazonaws.com.cn
      cn-northwest-1: 934860584483.dkr.ecr.cn-northwest-1.amazonaws.com.cn
      us-gov-east-1: 743662458514.dkr.ecr.us-gov-east-1.amazonaws.com
      us-gov-west-1: 743662458514.dkr.ecr.us-gov-west-1.amazonaws.com
  enabled: true
  priorityClassName: system-node-critical
  resources:
    requests:
      memory: 128Mi
      cpu: 250m
    limits:
      memory: 512Mi
      cpu: 500m
  ## TLS Certificate Option 1: Use Helm to automatically generate self-signed certificate.
  ## autoGenerateCert must be enabled. This is the default option.
  ## If true, Helm will automatically create a self-signed cert and secret for you.
  autoGenerateCert:
    enabled: true
    expiryDays: 3650 # 10 years
  ## TLS Certificate Option 2: Use certManager to generate self-signed certificate.
  ## certManager must be enabled. If enabled, it takes precedence over option 1.
  certManager:
    enabled: true
    ## Provide the issuer kind and name to do the cert auth job.
    ## By default, OpenTelemetry Operator will use self-signer issuer.
    issuerRef: {}
    # kind:
    # name:
    ## Annotations for the cert and issuer if cert-manager is enabled.
    certificateAnnotations: {}
    issuerAnnotations: {}
  serviceAccount:
    name: # override agent service account name
  config: # optional config that can be provided to override the defaultConfig
  otelConfig: # optional YAML config that can be provided to combine with the config/defaultConfig
  defaultConfig:
    {
      "logs": {
        "metrics_collected": {
          "kubernetes": {
            "enhanced_container_insights": true
          },
          "application_signals": { }
        }
      },
      "traces": {
        "traces_collected": {
          "application_signals": { }
        }
      }
    }
  prometheus:
    config:
    targetAllocator:
      enabled: false
      image:
        repository: cloudwatch-agent-target-allocator
        tag: 1.0.0
        repositoryDomainMap:
          public: public.ecr.aws/cloudwatch-agent
          cn-north-1: 934860584483.dkr.ecr.cn-north-1.amazonaws.com.cn
          cn-northwest-1: 934860584483.dkr.ecr.cn-northwest-1.amazonaws.com.cn
          us-gov-east-1: 743662458514.dkr.ecr.us-gov-east-1.amazonaws.com
          us-gov-west-1: 743662458514.dkr.ecr.us-gov-west-1.amazonaws.com
      prometheusCR:
        enabled: false
dcgmExporter:
  name:
  image:
    repository: dcgm-exporter
    tag: 3.3.7-3.5.0-ubuntu22.04
    repositoryDomainMap:
      public: nvcr.io/nvidia/k8s
      cn-north-1: 934860584483.dkr.ecr.cn-north-1.amazonaws.com.cn
      cn-northwest-1: 934860584483.dkr.ecr.cn-northwest-1.amazonaws.com.cn
      us-gov-east-1: 743662458514.dkr.ecr.us-gov-east-1.amazonaws.com
      us-gov-west-1: 743662458514.dkr.ecr.us-gov-west-1.amazonaws.com
  resources:
    requests:
      cpu: 250m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 500Mi
  configmap: dcgm-exporter-config-map
  arguments:
    - --web-config-file=/etc/dcgm-exporter/web-config.yaml
  service:
    enable: true
    type: ClusterIP
    port: 9400
    address: :9400
  kubeletPath: /var/lib/kubelet/pod-resources
  serviceAccount:
    name: # override exporter service account name
neuronMonitor:
  name:
  image:
    repository: neuron-monitor
    tag: 1.3.0
    repositoryDomainMap:
      public: public.ecr.aws/neuron
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 256m
      memory: 128Mi
  configmap: neuron-monitor-config-map
  service:
    enable: true
    type: ClusterIP
    port: 8000
    address: :8000
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
    capabilities:
      add:
        - SYS_ADMIN
  serviceAccount:
    name: # override exporter service account name