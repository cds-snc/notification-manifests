applicationName: {{ .Release.Name }}
labels:
    group: notification
    team: notification
service:
  annotations: 
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"    
  type: LoadBalancer
deployment:
  replicas: 1
  selector:
    matchLabels:
      app: document-download-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  priorityClassName: high-priority    
  image:
    repository: {{ requiredEnv "DOCUMENT_DOWNLOAD_IMAGE" }}
    imagePullPolicy: Always  
  name: document-download-api
  containerSecurityContext:
    readOnlyRootFilesystem: false
    runAsNonRoot: false      
  env:
    - name: ALLOW_DEBUG_ROUTE
      value: {{ requiredEnv "ALLOW_DEBUG_ROUTE" | quote }}
    - name: AUTH_TOKENS
      value: {{ requiredEnv "AUTH_TOKENS" }}
    - name: AWS_REGION
      value: {{ requiredEnv "AWS_REGION" }}
    - name: DEBUG
      value: "False"
    - name: DOCUMENTS_BUCKET
      value: notification-canada-ca-dev-{{ .Environment.Name }}-download
    - name: DEBUG_KEY
      value: {{ requiredEnv "DEBUG_KEY" }}
    - name: BACKEND_HOSTNAME
      value: api.document.{{ "BASE_DOMAIN" }}
    - name: HTTP_SCHEME
      value: "https"
    - name: SCAN_FILES_DOCUMENTS_BUCKET
      value: notification-canada-ca-{{ .Environment.Name }}-document-download-scan-files
    - name: SECRET_KEY
      value: {{ requiredEnv "SECRET_KEY" }}
    - name: EXTRA_MIME_TYPES
      value: {{ requiredEnv "EXTRA_MIME_TYPES" }}
    - name: NEW_RELIC_APP_NAME
      value: notification-document-api-{{ .Environment.Name }}
    - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
      value: "true"
    - name: NEW_RELIC_LICENSE_KEY
      value: {{ requiredEnv "NEW_RELIC_LICENSE_KEY" }}
    - name: NEW_RELIC_MONITOR_MODE
      value: {{ requiredEnv "NEW_RELIC_MONITOR_MODE" | quote }}
    - name: NOTIFY_ENVIRONMENT
      value: {{ requiredEnv "NOTIFY_ENVIRONMENT" }}
  resources:
    requests:
      cpu: "100m"
      memory: "400Mi"
    limits:
      cpu: "400m"
      memory: "800Mi"
  ports:
    - containerPort: 7000
  readinessProbe:
    httpGet:
      path: /_status
      port: 7000
    initialDelaySeconds: 1
    periodSeconds: 3
    timeoutSeconds: 1
    successThreshold: 3
    failureThreshold: 10
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  terminationGracePeriodSeconds: 60