db:
  #ENVIRONMENT SPECIFIC VARIABLES
  NOTIFY_ENVIRONMENT: "{{ .Environment.Name }}"
  ADMIN_BASE_DOMAIN: "https://{{ requiredEnv "BASE_DOMAIN" }}"
  ASSET_UPLOAD_BUCKET_NAME: "{{ .Release.Namespace }}-{{ .Environment.Name }}-asset-upload"
  CSV_UPLOAD_BUCKET_NAME: "{{ .Release.Namespace }}-{{ .Environment.Name }}-csv-upload"
  BASE_DOMAIN: "{{ requiredEnv "BASE_DOMAIN" }}"
  ASSET_DOMAIN: "assets.{{ requiredEnv "BASE_DOMAIN" }}"
  DOCUMENTATION_DOMAIN: "documentation.{{ requiredEnv "BASE_DOMAIN" }}"
  DOCUMENT_DOWNLOAD_API_HOST: "https://{{ .StateValues.API_HOST_NAME_PREFIX }}.document.{{ requiredEnv "BASE_DOMAIN" }}"
  API_HOST_NAME: "https://{{ .StateValues.API_HOST_NAME_PREFIX }}.{{ requiredEnv "BASE_DOMAIN" }}"
  HC_EN_SERVICE_ID: "{{ .StateValues.HC_EN_SERVICE_ID }}"
  HC_FR_SERVICE_ID: "{{ .StateValues.HC_FR_SERVICE_ID }}"
  NEW_RELIC_APP_NAME: "notification-api-{{ .Environment.Name }}"
  NEW_RELIC_ENABLED: "{{ .StateValues.NEW_RELIC_ENABLED }}"
  NEW_RELIC_DISTRIBUTED_TRACING_ENABLED: "{{ .StateValues.NEW_RELIC_ENABLED }}"
  NEW_RELIC_MONITOR_MODE: "{{ .StateValues.NEW_RELIC_ENABLED }}"
  NEW_RELIC_EXTENSION_SEND_FUNCTION_LOGS: "{{ .StateValues.NEW_RELIC_ENABLED }}"
  NEW_RELIC_EXTENSION_SEND_EXTENSION_LOGS: "{{ .StateValues.NEW_RELIC_ENABLED }}"
  NEW_RELIC_IGNORE_STARTUP_ERRORS: "true"
  NEW_RELIC_ENVIRONMENT: "{{ .Environment.Name }}"
  ALLOW_HTML_SERVICE_IDS: "{{ .StateValues.ALLOW_HTML_SERVICE_IDS }}"
  AWS_XRAY_SDK_ENABLED: "{{ .StateValues.AWS_XRAY_SDK_ENABLED }}"
  AWS_XRAY_TRACING_ENABLED: "{{ .StateValues.AWS_XRAY_TRACING_ENABLED }}"
  AWS_XRAY_CONTEXT_MISSING: "{{ .StateValues.AWS_XRAY_CONTEXT_MISSING }}"
  FF_ANNUAL_LIMIT: "{{ .StateValues.FF_ANNUAL_LIMIT }}"
  FF_PT_SERVICE_SKIP_FRESHDESK: "{{ .StateValues.FF_PT_SERVICE_SKIP_FRESHDESK }}"
  FF_SALESFORCE_CONTACT: "{{ .StateValues.FF_SALESFORCE_CONTACT }}"
  REPORTS_BUCKET_NAME: "{{ .Release.Namespace }}-{{ .Environment.Name }}-reports"
  SALESFORCE_DOMAIN: "{{ .StateValues.SALESFORCE_DOMAIN }}"
  GC_ORGANISATIONS_BUCKET_NAME: "{{ .StateValues.GC_ORGANISATIONS_BUCKET_NAME }}"
  FIDO2_DOMAIN: "{{ requiredEnv "BASE_DOMAIN" }}"
  # NON-ENVIRONMENT SPECIFIC VARIABLES
  AWS_XRAY_DAEMON_ADDRESS: "xray-daemon-aws-xray.xray.svc.cluster.local:2000"
  SQLALCHEMY_POOL_SIZE: "256"
  ZENDESK_API_URL: "https://api.getbase.com"
  ZENDESK_SELL_API_URL: "https://cds-snc.zendesk.com"
  REDIS_ENABLED: "1"
  NOTIFICATION_QUEUE_PREFIX: "eks-notification-canada-ca"
  NEW_RELIC_CONFIG_FILE: "/app/newrelic.ini"
  HELM_TEST_API: "HELM-IS-RADICAL!-API"
  FLASK_APP: "application.py"
  FRESH_DESK_API_URL: "https://cds-snc.freshdesk.com"
  FF_CLOUDWATCH_METRICS_ENABLED: "{{ .StateValues.FF_CLOUDWATCH_METRICS_ENABLED }}"
  BATCH_INSERTION_CHUNK_SIZE: "10"
  CRM_ORG_LIST_URL: "https://raw.githubusercontent.com/cds-snc/gc-organisations-qa/main/data/all.json"
  AWS_PINPOINT_REGION: "us-west-2"
  AWS_REGION: "ca-central-1"
  AWS_SES_REGION: "us-east-1"
  AWS_SES_SMTP: "email-smtp.us-east-1.amazonaws.com"
  AWS_US_TOLL_FREE_NUMBER: "+18449261787"
  ATTACHMENT_NUM_LIMIT: 10
  FF_AUTH_V2: "{{ .StateValues.FF_AUTH_V2 }}"

# Define the specific secrets needed for database operations
dbSecrets:
  ADMIN_CLIENT_SECRET: MANIFEST_ADMIN_CLIENT_SECRET
  AWS_ROUTE53_ZONE: MANIFEST_AWS_ROUTE53_ZONE
  AWS_SES_ACCESS_KEY: MANIFEST_AWS_SES_ACCESS_KEY
  AWS_SES_SECRET_KEY: MANIFEST_AWS_SES_SECRET_KEY
  CRM_GITHUB_PERSONAL_ACCESS_TOKEN: MANIFEST_CRM_GITHUB_PERSONAL_ACCESS_TOKEN
  DANGEROUS_SALT: MANIFEST_DANGEROUS_SALT
  SALESFORCE_ENGAGEMENT_PRODUCT_ID: MANIFEST_SALESFORCE_ENGAGEMENT_PRODUCT_ID
  SALESFORCE_ENGAGEMENT_RECORD_TYPE: MANIFEST_SALESFORCE_ENGAGEMENT_RECORD_TYPE
  SALESFORCE_ENGAGEMENT_STANDARD_PRICEBOOK_ID: MANIFEST_SALESFORCE_ENGAGEMENT_STANDARD_PRICEBOOK_ID
  SALESFORCE_GENERIC_ACCOUNT_ID: MANIFEST_SALESFORCE_GENERIC_ACCOUNT_ID
  SALESFORCE_PASSWORD: MANIFEST_SALESFORCE_PASSWORD
  SALESFORCE_SECURITY_TOKEN: MANIFEST_SALESFORCE_SECURITY_TOKEN
  SALESFORCE_USERNAME: MANIFEST_SALESFORCE_USERNAME
  SECRET_KEY: MANIFEST_SECRET_KEY
  SENDGRID_API_KEY: MANIFEST_SENDGRID_API_KEY
  SQLALCHEMY_DATABASE_URI: MANIFEST_SQLALCHEMY_DATABASE_URI
  ZENDESK_SELL_API_KEY: MANIFEST_ZENDESK_SELL_API_KEY
  ZENDESK_API_KEY: MANIFEST_ZENDESK_API_KEY
  FRESH_DESK_API_KEY: MANIFEST_FRESH_DESK_API_KEY
  FRESH_DESK_PRODUCT_ID: MANIFEST_FRESH_DESK_PRODUCT_ID
  SQLALCHEMY_DATABASE_READER_URI: MANIFEST_SQLALCHEMY_DATABASE_READER_URI
  # POSTGRES_HOST is used by the init script to verify the database is up
  POSTGRES_HOST: MANIFEST_POSTGRES_HOST
  SRE_CLIENT_SECRET: MANIFEST_SRE_CLIENT_SECRET
  ENABLE_NEW_RELIC: MANIFEST_ENABLE_NEW_RELIC
  NEW_RELIC_LICENSE_KEY: MANIFEST_NEW_RELIC_LICENSE_KEY
  NEW_RELIC_ACCOUNT_ID: MANIFEST_NEW_RELIC_ACCOUNT_ID
  NEW_RELIC_API_KEY: MANIFEST_NEW_RELIC_API_KEY
  REDIS_URL: MANIFEST_REDIS_URL
  CACHE_OPS_URL: MANIFEST_CACHE_OPS_URL
  CYPRESS_USER_PW_SECRET: MANIFEST_CYPRESS_USER_PW_SECRET
  CYPRESS_AUTH_CLIENT_SECRET: MANIFEST_CYPRESS_AUTH_CLIENT_SECRET
  DOCUMENT_DOWNLOAD_API_KEY: MANIFEST_DOCUMENT_DOWNLOAD_API_KEY
  CACHE_CLEAR_CLIENT_SECRET: MANIFEST_CACHE_CLEAR_CLIENT_SECRET

database:
  args: {{ .StateValues.DB_ARGS }}

image: 
  tag: "{{ .StateValues.API_DOCKER_TAG }}"

dockerhub:
  username: {{ requiredEnv "MANIFEST_DOCKER_HUB_USERNAME" }}
  pat: {{ requiredEnv "MANIFEST_DOCKER_HUB_PAT" }}

ttlSecondsAfterFinished: 34560

service:
  enabled: false

serviceAccount:
  create: true
  serviceAccountName: "notify-database"
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::{{ requiredEnv "AWS_ACCOUNT_ID" }}:role/secrets-csi-role-database

nodeSelector:
  eks.amazonaws.com/capacityType: ON_DEMAND
