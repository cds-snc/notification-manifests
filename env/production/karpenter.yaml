---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: karpenter
  namespace: karpenter
  labels:
    app.kubernetes.io/name: karpenter
    app.kubernetes.io/instance: karpenter
    app.kubernetes.io/version: "0.30.0"
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::296255494825:role/karpenter-controller-eks
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: karpenter-global-settings
  namespace: karpenter
  labels:
    app.kubernetes.io/name: karpenter
    app.kubernetes.io/instance: karpenter
    app.kubernetes.io/version: "0.30.0"
data:  
    "aws.assumeRoleARN": ""
    "aws.assumeRoleDuration": "15m"
    "aws.clusterCABundle": ""
    "aws.clusterEndpoint": ""
    "aws.clusterName": "notification-canada-ca-production-eks-cluster"
    "aws.defaultInstanceProfile": "KarpenterNodeInstanceProfile-karpenter-controller-eks"
    "aws.enableENILimitedPodDensity": "true"
    "aws.enablePodENI": "false"
    "aws.interruptionQueueName": ""
    "aws.isolatedVPC": "false"
    "aws.vmMemoryOverheadPercent": "0.075"
    "batchIdleDuration": "1s"
    "batchMaxDuration": "10s"
    "featureGates.driftEnabled": "false"
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  requirements:
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["spot"]
    - key: node.kubernetes.io/instance-type
      operator: In
      values: ["m5.large", "r5.large"]      
  limits:
    resources:
      cpu: 1000
  providerRef:
    name: default
  ttlSecondsAfterEmpty: 300
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: default
spec:
  subnetSelector:
    karpenter.sh/discovery: notification-canada-ca-production-eks-cluster
  securityGroupSelector:
    karpenter.sh/discovery: notification-canada-ca-production-eks-cluster    
