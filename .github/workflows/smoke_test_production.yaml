name: "Production smoke test"

on:
  workflow_dispatch:  # Enables manual triggering
    inputs:
      prod_validation:
        description: "Type the words `smoke production` to validate a production run of the smoke tests"
        required: true
        default: ""
defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Validate production run
        run: |
          if [ "${{ inputs.prod_validation }}" != "smoke production" ]; then
            echo "Invalid words provided for production run. Exiting."
            exit 1
          fi
      
      - name: Install libcurl
        run: sudo apt-get update && sudo apt-get install libssl-dev libcurl4-openssl-dev

      - name: Checkout api
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          repository: cds-snc/notification-api

      - name: Set up Python
        uses: actions/setup-python@b64ffcaf5b410884ad320a9cfac8866006a109aa # v4.8.0
        with:
          python-version: "3.12"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Get packages from cache
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-

      - name: Install poetry
        env:
          POETRY_VERSION: "1.3.2"
        run: pip install poetry==${POETRY_VERSION} && poetry --version

      - name: Install requirements
        run: poetry install

      - name: Run smoke tests on staging
        env:
          SMOKE_ADMIN_CLIENT_SECRET: ${{ secrets.PRODUCTION_SMOKE_ADMIN_CLIENT_SECRET}}
          SMOKE_API_KEY: ${{ secrets.PRODUCTION_SMOKE_API_KEY}}
          SMOKE_AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID}}
          SMOKE_AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY}}
          SMOKE_API_HOST_NAME: https://api.notification.canada.ca
          SMOKE_CSV_UPLOAD_BUCKET_NAME: notification-canada-ca-production-csv-upload
          SMOKE_EMAIL_TEMPLATE_ID: bcc5ff84-4f20-4714-ac8e-7c5bd91c49a6
          SMOKE_EMAIL_TO: success@simulator.amazonses.com
          SMOKE_SMS_TO: 12897682684
          SMOKE_SERVICE_ID: 327003f5-c064-4850-bb13-2bdb7e7b5c9d
          SMOKE_SMS_TEMPLATE_ID: 401e84e2-963c-443b-b18b-4c1e34c7f2d5
          SMOKE_USER_ID: fc9bf996-89dc-4186-85ae-0863cda686ae
          SMOKE_POLL_TIMEOUT: 450
        run: poetry run make smoke-test
      - name: Notify Slack channel if this job failed
        if: ${{ failure() }}
        run: |
          json='{"text":"<!here> Production smoke tests failed: <https://github.com/cds-snc/notification-manifests/|notification-manifests> !"}'
          curl -X POST -H 'Content-type: application/json' --data "$json"  ${{ secrets.SLACK_WEBHOOK }}
