name: "Staging smoke test"

on:
  push:
    branches:
      - "release-*"

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install libcurl
        run: sudo apt-get update && sudo apt-get install libssl-dev libcurl4-openssl-dev

      - name: Checkout api
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0
        with:
          repository: cds-snc/notification-api

      - name: Set up Python
        uses: actions/setup-python@75f3110429a8c05be0e1bf360334e4cced2b63fa # v2.3.3
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Get packages from cache
        uses: actions/cache@2b250bc32ad02700b996b496c14ac8c2840a2991 # v2.1.8
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-

      - name: Install poetry
        env:
          POETRY_VERSION: "1.3.2"
        run: pip install poetry==${POETRY_VERSION} && poetry --version

      - name: Install requirements
        run: poetry install

      - name: Run smoke tests on staging
        env:
          SMOKE_ADMIN_CLIENT_SECRET: ${{ secrets.SMOKE_ADMIN_CLIENT_SECRET}}
          SMOKE_API_HOST_NAME: ${{ secrets.SMOKE_API_HOST_NAME}}
          SMOKE_API_KEY: ${{ secrets.SMOKE_API_KEY}}
          SMOKE_AWS_ACCESS_KEY_ID: ${{ secrets.SMOKE_AWS_ACCESS_KEY_ID}}
          SMOKE_AWS_SECRET_ACCESS_KEY: ${{ secrets.SMOKE_AWS_SECRET_ACCESS_KEY}}
          SMOKE_CSV_UPLOAD_BUCKET_NAME: ${{ secrets.SMOKE_CSV_UPLOAD_BUCKET_NAME}}
          SMOKE_EMAIL_TEMPLATE_ID: ${{ secrets.SMOKE_EMAIL_TEMPLATE_ID}}
          SMOKE_EMAIL_TO: ${{ secrets.SMOKE_EMAIL_TO}}
          SMOKE_SMS_TO: ${{ secrets.SMOKE_SMS_TO}}
          SMOKE_SERVICE_ID: ${{ secrets.SMOKE_SERVICE_ID}}
          SMOKE_SMS_TEMPLATE_ID: ${{ secrets.SMOKE_SMS_TEMPLATE_ID}}
          SMOKE_USER_ID: ${{ secrets.SMOKE_USER_ID}}
          SMOKE_POLL_TIMEOUT: ${{ secrets.SMOKE_POLL_TIMEOUT}}
        run: poetry run make smoke-test
