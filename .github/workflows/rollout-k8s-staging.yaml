name: Staging - Kubernetes Rollout
on:
  workflow_dispatch:
  repository_dispatch:
    types: webhook

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  HELMFILE_FILE_PATH: ${{ github.workspace }}/helmfile
  PRODUCTION_AWS_ACCOUNT: ${{ secrets.PRODUCTION_AWS_ACCOUNT }}

jobs:
  rollout:
    runs-on: github-arc-ss-manifests-dev
    name: Rollout on EKS
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
        id: awsconfig
        with:
          aws-access-key-id: ${{ secrets.STAGING_EKS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.STAGING_EKS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          # Fetches entire history, so we can analyze commits since last tag
          fetch-depth: 0
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v2.0.0
        with:
          install-kubectl: yes
          install-helm: yes
      - name: Configure kubeconfig
        run: |
          aws eks update-kubeconfig --name notification-canada-ca-staging-eks-cluster   
      - name: Update images in staging
        run: |
          kubectl set image deployment.apps/api api=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=$HOME/.kube/config
          kubectl set image deployment.apps/celery-beat celery-beat=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=$HOME/.kube/config
          kubectl set image deployment.apps/celery-sms celery-sms=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=$HOME/.kube/config
          kubectl set image deployment.apps/celery-primary celery-primary=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=$HOME/.kube/config
          kubectl set image deployment.apps/celery-scalable celery-scalable=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=$HOME/.kube/config
          kubectl set image deployment.apps/celery-sms-send-primary celery-sms-send-primary=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=$HOME/.kube/config
          kubectl set image deployment.apps/celery-sms-send-scalable celery-sms-send-scalable=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=$HOME/.kube/config
          kubectl set image deployment.apps/celery-email-send-primary celery-email-send-primary=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=$HOME/.kube/config
          kubectl set image deployment.apps/celery-email-send-scalable celery-email-send-scalable=$DOCKER_SLUG:${GITHUB_SHA::7} -n=notification-canada-ca --kubeconfig=$HOME/.kube/config

      - name: Restart deployments in staging
        run: |
          kubectl rollout restart deployment/api -n notification-canada-ca
          kubectl rollout restart deployment/celery-beat -n notification-canada-ca
          kubectl rollout restart deployment/celery-sms -n notification-canada-ca
          kubectl rollout restart deployment/celery-primary -n notification-canada-ca
          kubectl rollout restart deployment/celery-scalable -n notification-canada-ca
          kubectl rollout restart deployment/celery-sms-send-primary -n notification-canada-ca
          kubectl rollout restart deployment/celery-sms-send-scalable -n notification-canada-ca
          kubectl rollout restart deployment/celery-email-send-primary -n notification-canada-ca
          kubectl rollout restart deployment/celery-email-send-scalable -n notification-canada-ca          