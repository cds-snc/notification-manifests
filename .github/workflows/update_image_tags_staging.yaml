name: Update Docker Image for Manifests in Staging

on:
  repository_dispatch:
    types:
      - update-docker-image

jobs:
  update-image:
    runs-on: ubuntu-latest
    steps:

      - name: Obtain a Notify PR Bot GitHub App Installation Access Token
        run: |
          TOKEN="$(npx obtain-github-app-installation-access-token@1.1.0 ci ${{ secrets.PR_BOT_GITHUB_TOKEN }})"
          echo "::add-mask::$TOKEN"
          echo "GITHUB_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ env.GITHUB_TOKEN }}
          ref: main

      - name: Setup git config
        run: |
          git config user.name "Notify PR Bot"
          git config user.email "action@github.com"

      # ADMIN_DOCKER_TAG
      # API_DOCKER_TAG
      # DOCUMENT_DOWNLOAD_DOCKER_TAG
      # DOCUMENTATION_DOCKER_TAG
      - name: Update the docker tag in staging.env
        run: |
          echo "Updating docker tag in staging.env"
          sed -i 's/^${{ github.event.client_payload.component }}_DOCKER_TAG:.*/${{ github.event.client_payload.component }}_DOCKER_TAG: "'"${{ github.event.client_payload.docker_tag }}"'"/' helmfile/overrides/staging.env
          cat helmfile/overrides/staging.env

      - name: Branch protection OFF
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/:repository/branches/main/protection
          repository: ${{ github.repository }}
          required_status_checks: | 
            null
          required_linear_history: |
            null
          enforce_admins: |
            null
          required_pull_request_reviews: |
            null
          restrictions: | 
            null 
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

      - name: Commit
        run: |
          git add helmfile/overrides/staging.env
          git commit -m "Update ${{ github.event.client_payload.component }} docker image tag to ${{ github.event.client_payload.docker_tag }}"
          git push

      - name: Branch protection ON
        if: always()
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/:repository/branches/main/protection
          repository: ${{ github.repository }}
          required_status_checks: | 
            strict: true
            checks:
              - context: helmfile-diff
          required_linear_history: |
            true
          enforce_admins: |
            true
          required_pull_request_reviews: |
            required_approving_review_count: 1
          restrictions: | 
            null 
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

