name: "Merge to main (Production)"

on:
  push:
    branches:
      - main
    paths:
      - "VERSION"

env:
  PRIVATE_ECR: ${{ secrets.PRODUCTION_AWS_ACCOUNT }}.dkr.ecr.ca-central-1.amazonaws.com/notify
  API_LAMBDA_IMAGE: api-lambda:e67db7e

defaults:
  run:
    shell: bash

jobs:
  kubectl-apply:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Prod Version
        run: |
          TARGET_VERSION=`cat VERSION`
          echo "TARGET_VERSION=$TARGET_VERSION" >> $GITHUB_ENV

      - name: Checkout target Prod version
        uses: actions/checkout@v2
        with:
          ref: ${{ env.TARGET_VERSION }}

      - name: Inject token authentication
        run: |
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      # Pin kubectl until https://github.com/aws/aws-cli/issues/6920 is fixed
      - uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.23.6'

      - name: Run manifest build
        run: |
          cp env.example env/production/.env
          make production-debug > /dev/null 2>&1

      - name: Decrypt production env
        run: |
          make decrypt-production

      - name: Configure kubeconfig
        run: |
          aws eks update-kubeconfig --name notification-canada-ca-production-eks-cluster

      - name: Apply changes
        run: |
          kubectl apply -k env/production --kubeconfig=/home/runner/.kube/config

      - name: Deploy lambda
        run: |
          aws lambda update-function-code \
            --function-name api-lambda \
            --image-uri $PRIVATE_ECR/$API_LAMBDA_IMAGE > /dev/null 2>&1

      - name: Add deployment to New Relic
        run: |
          for application_id in 283469061 283468826 283468685; do
            curl -X POST "https://api.newrelic.com/v2/applications/$application_id/deployments.json" \
             -H "X-Api-Key:$NEW_RELIC_API_KEY" -i \
             -H 'Content-Type: application/json' \
             -d \
            '{
              "deployment": {
                "revision": "'$GITHUB_SHA'"
              }
            }'
          done
        env:
          NEW_RELIC_API_KEY: ${{ secrets.PRODUCTION_NEW_RELIC_API_KEY }}
