name: "Database Job Helmfile Sync"
description: "Sync Helmfile for database migration and wait for the job to complete."
inputs:
  environment:
    description: "The Helmfile environment to use (e.g., staging)."
    required: true
  namespace:
    description: "The Kubernetes namespace where the job runs (e.g., notification-canada-ca)."
    required: true
  app_label:
    description: "The app label to filter Helmfile resources (e.g., notify-database)."
    required: true
  timeout:
    description: "Timeout for waiting for the job to complete (e.g., 400s)."
    required: false
    default: "400s"
  db_args:
    description: "Additional arguments for the database job command."
    required: false
    default: "upgrade"

runs:
  using: "composite"
  steps:
    - name: Helmfile Sync Database Job
      id: helmfile_apply
      shell: bash
      run: |
        pushd helmfile
        DB_ARGS="${{ inputs.db_args }}" helmfile --environment ${{ inputs.environment }} -l app=${{ inputs.app_label }} sync
        IMAGE_TAG=$(helm get values ${{ inputs.app_label }} -n ${{ inputs.namespace }} -o json | jq -r '.image.tag')
        RELEASE_REVISION=$(helm list -n ${{ inputs.namespace }} -o json | jq -r '.[] | select(.name=="${{ inputs.app_label }}") | .revision')
        echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
        echo "release_revision=${RELEASE_REVISION}" >> $GITHUB_OUTPUT
        popd

    - name: Wait for Job Completion
      shell: bash
      env:
        IMAGE_TAG: ${{ steps.helmfile_apply.outputs.image_tag }}
        RELEASE_REVISION: ${{ steps.helmfile_apply.outputs.release_revision }}
      run: |
        echo "Using image tag: ${IMAGE_TAG}"
        kubectl wait --for=condition=complete job/notify-db-job-${IMAGE_TAG}-${RELEASE_REVISION} \
          -n ${{ inputs.namespace }} \
          --timeout=${{ inputs.timeout }}